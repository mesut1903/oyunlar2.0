let board = [];// Oyun tahtasÄ±
let rows = 8;// SatÄ±r sayÄ±sÄ±
let columns = 8;// SÃ¼tun sayÄ±sÄ±

let minesCount = 10; // MayÄ±n sayÄ±sÄ±
let minesLocation = []; // "2-2", "3-4", "2-1"

let tilesClicked = 0; // TÃ¼m karolarÄ± tÄ±klama hedefi (mayÄ±n iÃ§ermeyenler)
let flagEnabled = false; // Bayrak modu etkin mi?

let gameOver = false; // Oyun bitiÅŸ durumu

window.onload = function() {
    startGame(); // Oyun yÃ¼klendiÄŸinde baÅŸlatÄ±lÄ±r
}

function setMines() {
    // Ã–nceden belirlenmiÅŸ mayÄ±n konumlarÄ±nÄ± eklemek iÃ§in kullanÄ±lan kodlar

    // minesLocation.push("2-2");
    // minesLocation.push("2-3");
    // minesLocation.push("5-6");
    // minesLocation.push("3-4");
    // minesLocation.push("1-1");
   

    let minesLeft = minesCount;  // Koyulacak mayÄ±n sayÄ±sÄ±

    while (minesLeft > 0) { // MayÄ±nlar koyulana kadar devam eder
        let r = Math.floor(Math.random() * rows);// Rastgele bir satÄ±r seÃ§er
        let c = Math.floor(Math.random() * columns);// Rastgele bir sÃ¼tun seÃ§er
        let id = r.toString() + "-" + c.toString(); // MayÄ±nÄ±n ID'sini oluÅŸturur

        if (!minesLocation.includes(id)) {// ID daha Ã¶nce eklenmediyse devam eder
            minesLocation.push(id);// MayÄ±nÄ± ekler
            minesLeft -= 1;  // Koyulacak mayÄ±n sayÄ±sÄ±nÄ± azaltÄ±r
        }
    }
}


function startGame() {
    document.getElementById("mines-count").innerText = minesCount;// MayÄ±n sayÄ±sÄ±nÄ± gÃ¶steren elementin iÃ§eriÄŸini ayarlar
    document.getElementById("flag-button").addEventListener("click", setFlag); // Bayrak butonuna tÄ±klamayÄ± dinler
    setMines();
     //Panomuzu Dolduruyoruz

    for (let r = 0; r < rows; r++) {// SatÄ±rlarÄ± dÃ¶ner
        let row = []; // SatÄ±rÄ± temsil eden boÅŸ bir dizi oluÅŸturur

        for (let c = 0; c < columns; c++) { // SÃ¼tunlarÄ± dÃ¶ner

            // Yeni bir div elementi oluÅŸturur ve Ã¶zelliklerini ayarlar

            let tile = document.createElement("div");
            tile.id = r.toString() + "-" + c.toString();// ID'sini ayarlar
            tile.addEventListener("click", clickTile);// TÄ±klamayÄ± dinler
            document.getElementById("board").append(tile);// Div'i tahtaya ekler
            row.push(tile);// Div'i satÄ±r dizisine ekler
        }
        board.push(row);// SatÄ±r dizisini tahtaya ekler
    }

    console.log(board);// OluÅŸturulan oyun tahtasÄ±nÄ± konsola yazdÄ±rÄ±r
}

function setFlag() {
    if (flagEnabled) {
        flagEnabled = false;// Bayrak modunu devre dÄ±ÅŸÄ± bÄ±rakÄ±r
        document.getElementById("flag-button").style.backgroundColor = "lightgray";// Bayrak butonunun arka plan rengini deÄŸiÅŸtirir
    
    }
    else {// Bayrak modu etkin deÄŸilse
        flagEnabled = true;// Bayrak modunu etkinleÅŸtirir
        document.getElementById("flag-button").style.backgroundColor = "darkgray";// Bayrak butonunun arka plan rengini deÄŸiÅŸtirir
    }
}

function clickTile() {
    if (gameOver || this.classList.contains("tile-clicked")) {// Oyun bitti veya karoya zaten tÄ±klanmÄ±ÅŸsa
        return;  // Ä°ÅŸlemi sonlandÄ±rÄ±r
    }

    let tile = this;// TÄ±klanan karo

    if (flagEnabled) {// Bayrak modu etkinse
        if (tile.innerText == "") {// Karo boÅŸsa
            tile.innerText = "ğŸš©";// Bayrak simgesini ekler
        }
        else if (tile.innerText == "ğŸš©") {// Karo bayrak simgesiyle iÅŸaretlenmiÅŸse
            tile.innerText = "";// Ä°ÅŸaretlemeyi kaldÄ±rÄ±r
        }
        return;// Ä°ÅŸlemi sonlandÄ±rÄ±r
    }

    if (minesLocation.includes(tile.id)) { // Karo bir mayÄ±n iÃ§eriyorsa
        gameOver = true;// Oyun biter
        revealMines();// TÃ¼m mayÄ±nlarÄ± gÃ¶sterir
        return;// Ä°ÅŸlemi sonlandÄ±rÄ±r
    }


    let coords = tile.id.split("-");   // Karonun satÄ±r ve sÃ¼tun koordinatlarÄ±nÄ± alÄ±r
    let r = parseInt(coords[0]);        // SatÄ±r koordinatÄ±nÄ± alÄ±r
    let c = parseInt(coords[1]);        // SÃ¼tun koordinatÄ±nÄ± alÄ±r
      checkMine(r, c); // MayÄ±n kontrol fonksiyonunu Ã§aÄŸÄ±rÄ±r


}

function revealMines() {
    for (let r= 0; r < rows; r++) { // SatÄ±rlarÄ± dÃ¶ner
        for (let c = 0; c < columns; c++) {// SÃ¼tunlarÄ± dÃ¶ner
            let tile = board[r][c]; // Karoyu alÄ±r
            if (minesLocation.includes(tile.id)) { // Karo bir mayÄ±n iÃ§eriyorsa
                tile.innerText = "ğŸ’£"; // MayÄ±n simgesini gÃ¶sterir
                tile.style.backgroundColor = "red";  // Arka plan rengini kÄ±rmÄ±zÄ± yapar
            }
        }
    }
}

function checkMine(r, c) {
    if (r < 0 || r >= rows || c < 0 || c >= columns) { // GeÃ§ersiz koordinatlar ise
        return;  // Ä°ÅŸlemi sonlandÄ±rÄ±r
    }
    if (board[r][c].classList.contains("tile-clicked")) {// Karo daha Ã¶nce tÄ±klanmÄ±ÅŸsa
        return;  // Ä°ÅŸlemi sonlandÄ±rÄ±r
    }

    board[r][c].classList.add("tile-clicked"); // Karoyu tÄ±klandÄ± olarak iÅŸaretler
    tilesClicked += 1; // TÄ±klanan karolarÄ±n sayÄ±sÄ±nÄ± artÄ±rÄ±r

    let minesFound = 0; // Bulunan mayÄ±n sayÄ±sÄ±

    minesFound += checkTile(r-1, c-1);    //Sol Ã¼st
    minesFound += checkTile(r-1, c);      //Ãœst
    minesFound += checkTile(r-1, c+1);     //SaÄŸ Ãœst

   
    minesFound += checkTile(r, c-1);      //Sol  
    minesFound += checkTile(r, c+1);      //SaÄŸ

    minesFound += checkTile(r+1, c-1);     //Sol Alt
    minesFound += checkTile(r+1, c);       //Alt
    minesFound += checkTile(r+1, c+1);     //SaÄŸ Alt 

    if (minesFound > 0) {// Etrafta mayÄ±n varsa
        board[r][c].innerText = minesFound; // Karo Ã¼zerine bulunan mayÄ±n sayÄ±sÄ±nÄ± yazdÄ±rÄ±r
        board[r][c].classList.add("x" + minesFound.toString()); // Karo sÄ±nÄ±fÄ±na mayÄ±n sayÄ±sÄ±nÄ± ekler
    }
    else {  // Etrafta mayÄ±n yoksa
        board[r][c].innerText = "";// Karo Ã¼zerinde metin bulunmaz
        
     
        checkMine(r-1, c-1); //Sol Ãœst 
        checkMine(r-1, c);    //Ãœst 
        checkMine(r-1, c+1);  //SaÄŸ Ãœst
        
        checkMine(r, c-1);      //Sol
        checkMine(r, c+1);       //SaÄŸ

       
        checkMine(r+1, c-1);   //Sol Alt
        checkMine(r+1, c);     //Alt
        checkMine(r+1, c+1);   //SaÄŸ Alt
    }

    if (tilesClicked == rows * columns - minesCount) { // TÃ¼m karolarÄ±n tÄ±klanÄ±p tÄ±klanmadÄ±ÄŸÄ±nÄ± kontrol eder
        document.getElementById("mines-count").innerText = "Cleared";// MayÄ±nlar temizlendiÄŸini gÃ¶sterir
        gameOver = true;// Oyunu sonlandÄ±rÄ±r
    }
}

function checkTile(r, c) {
    if (r < 0 || r >= rows || c < 0 || c >= columns) {// GeÃ§ersiz koordinatlar ise
        return 0;
    }
    if (minesLocation.includes(r.toString() + "-" + c.toString())) {// Belirtilen koordinatlarda mayÄ±n varsa
        return 1; // MayÄ±n bulunur
    }
    return 0;// MayÄ±n bulunmaz
}